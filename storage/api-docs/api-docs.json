{
    "openapi": "3.0.0",
    "info": {
        "title": "API TASK",
        "description": "Rest Full API for the task application in which you can perform different actions depending on the user's role<br> <li>Task management</li> <li>User Management</li> <li>Role management</li> <li>User Registration</li> <br> API authentication works with bearer token",
        "contact": {
            "email": "emanueljosemolina@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register user and return a token",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email of the user",
                                        "type": "string",
                                        "example": "emanueljose@gmail.com"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "name": {
                                        "description": "Name of the user",
                                        "type": "string",
                                        "example": "Emanuel Molina"
                                    },
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Emanuel Molina"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "emanueljosemolina@gmail.com"
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14 19:38:33"
                                                        },
                                                        "image": {
                                                            "type": "string",
                                                            "example": "public/images/LVOfSH7m3NHo3g3nZ6dK2HYrk1t59Vn8FxHDeJxM.jpg"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjo..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password or email is invalid"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "User created error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created error"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "properties": {
                                                        "email": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "The email has already been taken."
                                                            }
                                                        },
                                                        "password": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "password is required."
                                                            }
                                                        },
                                                        "name": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "name is required."
                                                            }
                                                        },
                                                        "image": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "The image field must be an image.",
                                                                    "The image field must be a file of type: jpg, jpeg, png, gif."
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user and return a token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "emanueljosemolina@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login success"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjo..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Emanuel Molina"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "emanueljosemolina@gmail.com"
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14 19:38:33"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password or email is invalid"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/dashboard": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Dashboard admin return information of system",
                "operationId": "2426415c7c4fc4c2674b0dff0ead6df1",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "count_users": {
                                                    "type": "integer",
                                                    "example": "40"
                                                },
                                                "count_tasks": {
                                                    "type": "integer",
                                                    "example": "56"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get profile of login user",
                "description": "Returns a information of login user",
                "operationId": "7e2ad4e5c1c526853f4b99982a934c0c",
                "responses": {
                    "200": {
                        "description": "Profile successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Emanuel Molina"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "emanueljosemolina@gmail.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "object",
                                                    "example": null
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "I7BtUuRAl4DnbpkmVeLBuZIdvsx4KKtf7XnaC2W6.jpg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-05-17T17:59:26.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-05-17T17:59:26.000000Z"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Admin"
                                                            },
                                                            "guard_name": {
                                                                "type": "string",
                                                                "example": "api"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2024-05-17T17:59:25.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": "2024-05-17T17:59:25.000000Z"
                                                            },
                                                            "pivot": {
                                                                "properties": {
                                                                    "model_type": {
                                                                        "type": "string",
                                                                        "example": "App\\\\Models\\\\User"
                                                                    },
                                                                    "model_id": {
                                                                        "type": "number",
                                                                        "example": 1
                                                                    },
                                                                    "role_id": {
                                                                        "type": "number",
                                                                        "example": 1
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update profile",
                "operationId": "aec94c00cbb3f557471841fe632a8c3c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email of the user",
                                        "type": "string",
                                        "example": "emanueljose@gmail.com"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "name": {
                                        "description": "Name of the user",
                                        "type": "string",
                                        "example": "Emanuel Molina"
                                    },
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Emanuel Molina"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "emanueljosemolina@gmail.com"
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14 19:38:33"
                                                        },
                                                        "image": {
                                                            "type": "string",
                                                            "example": "public/images/LVOfSH7m3NHo3g3nZ6dK2HYrk1t59Vn8FxHDeJxM.jpg"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password or email is invalid"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Profile updated error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated error"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "properties": {
                                                        "email": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "The email has already been taken."
                                                            }
                                                        },
                                                        "password": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "password is required."
                                                            }
                                                        },
                                                        "name": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "name is required."
                                                            }
                                                        },
                                                        "image": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "The image field must be an image.",
                                                                    "The image field must be a file of type: jpg, jpeg, png, gif."
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of roles",
                "description": "Returns a list of roles",
                "operationId": "29a9ef1155ba1b1eeefba13790f03f2f",
                "responses": {
                    "200": {
                        "description": "List of roles successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of roles successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Admin"
                                                            },
                                                            "guard_name": {
                                                                "type": "string",
                                                                "example": "api"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2024-05-17 17:59:26"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": "2024-05-17 17:59:26"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/roles/{rol}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get a rol",
                "operationId": "abcf1361c2565a08e887e2e02fb657e3",
                "parameters": [
                    {
                        "name": "rol",
                        "in": "path",
                        "description": "ID of the rol to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of rol successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "rol": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        },
                                                        "guard_name": {
                                                            "type": "string",
                                                            "example": "api"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-17 17:59:25"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-17 17:59:25"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "admin.dashboard.index"
                                                            },
                                                            "guard_name": {
                                                                "type": "string",
                                                                "example": "api"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2024-05-17 17:59:25"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": "2024-05-17 17:59:25"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rol not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rol not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "operationId": "0e6c76e2e80c2dc85b5acade402ea492",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of categories successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "category": {
                                                                "type": "integer",
                                                                "example": "Comida"
                                                            },
                                                            "count": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get list of tasks",
                "description": "Returns a list of tasks categorized by their status",
                "operationId": "49e73b9da657e3e2dac88d10e4ffaa4b",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter tasks by category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of tasks successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "tasks": {
                                                    "properties": {
                                                        "active": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 18
                                                                    },
                                                                    "user_id_register": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "id_task_status": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "Aut quia quo non dolores omnis illo. In et ut exercitationem ipsam dolorem officia enim est."
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "Fuga maiores sed et quia et possimus. Voluptatem ratione inventore neque est dolores."
                                                                    },
                                                                    "category": {
                                                                        "type": "string",
                                                                        "example": null
                                                                    },
                                                                    "color": {
                                                                        "type": "string",
                                                                        "example": "912141"
                                                                    },
                                                                    "start_date": {
                                                                        "type": "string",
                                                                        "example": null
                                                                    },
                                                                    "end_date": {
                                                                        "type": "string",
                                                                        "example": null
                                                                    },
                                                                    "deleted_at": {
                                                                        "type": "string",
                                                                        "example": null
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "example": "2024-05-17 17:59:26"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string",
                                                                        "example": "2024-05-17 17:59:26"
                                                                    },
                                                                    "user_name_register": {
                                                                        "type": "string",
                                                                        "example": "Emanuel Molina"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "hidden": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "shared": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 21
                                                                    },
                                                                    "user_id_register": {
                                                                        "type": "integer",
                                                                        "example": 5
                                                                    },
                                                                    "id_task_status": {
                                                                        "type": "integer",
                                                                        "example": 3
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "Aliquam quos illum nihil magni. Consequatur at alias quo. Illum et magni quibusdam totam."
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "Quae suscipit ducimus perspiciatis provident dolore deserunt sit enim. Maiores enim consequatur provident ullam sit. Doloremque magni quia aut voluptatem."
                                                                    },
                                                                    "category": {
                                                                        "type": "string",
                                                                        "example": "comida"
                                                                    },
                                                                    "color": {
                                                                        "type": "string",
                                                                        "example": "255869"
                                                                    },
                                                                    "start_date": {
                                                                        "type": "string",
                                                                        "example": null
                                                                    },
                                                                    "end_date": {
                                                                        "type": "string",
                                                                        "example": null
                                                                    },
                                                                    "deleted_at": {
                                                                        "type": "string",
                                                                        "example": null
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "example": "2024-05-17 17:59:26"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string",
                                                                        "example": "2024-05-17 17:59:26"
                                                                    },
                                                                    "user_name_register": {
                                                                        "type": "string",
                                                                        "example": "Uriel Crona DDS"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Save task",
                "operationId": "c55168b216f825bfb38201acb8ddba12",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Buy cat food"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Buy two cat bags"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Task"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "456456"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2024/04/02"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2024/04/05"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task": {
                                                    "properties": {
                                                        "user_id_register": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "id_task_status": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Buy cat food"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Buy two cat bags"
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "example": "Task"
                                                        },
                                                        "color": {
                                                            "type": "string",
                                                            "example": "456456"
                                                        },
                                                        "start_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20T19:35:00.000000Z"
                                                        },
                                                        "end_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20T19:35:00.000000Z"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Task creation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task creation failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "properties": {
                                                        "description": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "description is required"
                                                            }
                                                        },
                                                        "start_date": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "The start date field must be a valid date.",
                                                                    "The start date field must be a date before end date."
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/tasks/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a tasks",
                "operationId": "0601826fbcb29466207f929545df29e9",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of tasks successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "user_id_register": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "id_task_status": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Itaque sequi dicta adipisci quia sed. Dolorem et eligendi illum at. Quo non voluptatem et pariatur."
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Adipisci autem architecto natus aspernatur. Tempora dolorum dignissimos vel corrupti sapiente. Dignissimos quis labore neque qui placeat."
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "example": "otros"
                                                        },
                                                        "color": {
                                                            "type": "string",
                                                            "example": "150524"
                                                        },
                                                        "start_date": {
                                                            "type": "object",
                                                            "example": null
                                                        },
                                                        "end_date": {
                                                            "type": "object",
                                                            "example": null
                                                        },
                                                        "deleted_at": {
                                                            "type": "object",
                                                            "example": null
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "user_name_register": {
                                                            "type": "string",
                                                            "example": "Emanuel Molina"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": null
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task",
                "operationId": "34bc4d64c51b763b7437e84728cfd2cd",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Buy cat food"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Buy two cat bags"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Task"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "456456"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2024/04/02"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2024/04/05"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "user_id_register": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "id_task_status": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Buy cat food"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Buy two cat bags"
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "example": "Task"
                                                        },
                                                        "color": {
                                                            "type": "string",
                                                            "example": "456456"
                                                        },
                                                        "start_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20"
                                                        },
                                                        "end_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "intger",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Task creation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task creation failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "properties": {
                                                        "description": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "description is required"
                                                            }
                                                        },
                                                        "start_date": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "The start date field must be a valid date.",
                                                                    "The start date field must be a date before end date."
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task",
                "operationId": "434ca5f1bddda08c6c5fedbe73ccfab8",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "user_id_register": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "id_task_status": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Buy cat food"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Buy two cat bags"
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "example": "Task"
                                                        },
                                                        "color": {
                                                            "type": "string",
                                                            "example": "456456"
                                                        },
                                                        "start_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20"
                                                        },
                                                        "end_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20"
                                                        },
                                                        "deleted_at": {
                                                            "type": "string",
                                                            "example": "2024-05-20T19:35:00.000000Z"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "intger",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/tasks/restore/{task}": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Restore task",
                "operationId": "166648d87ca0c0639658ebdeb16a6791",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task restored successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "user_id_register": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "id_task_status": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Buy cat food"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Buy two cat bags"
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "example": "Task"
                                                        },
                                                        "color": {
                                                            "type": "string",
                                                            "example": "456456"
                                                        },
                                                        "start_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20"
                                                        },
                                                        "end_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20"
                                                        },
                                                        "deleted_at": {
                                                            "type": "object",
                                                            "example": null
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "intger",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/tasks/share/{task}/{user}": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Save share task",
                "operationId": "1ad6d0c77b3573b187ed3cb708c7fa9e",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task shared successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "user_id_register": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "id_task_status": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Buy cat food"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Buy two cat bags"
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "example": "Task"
                                                        },
                                                        "color": {
                                                            "type": "string",
                                                            "example": "456456"
                                                        },
                                                        "start_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20"
                                                        },
                                                        "end_date": {
                                                            "type": "string",
                                                            "example": "2024-05-20"
                                                        },
                                                        "deleted_at": {
                                                            "type": "object",
                                                            "example": null
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task shared failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "intger",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task shared failed"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete shared task",
                "operationId": "efa091b9eb51df3412db2546bc9a293b",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task shared deleted successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "intger",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "operationId": "eaedf6aa84fde38a08bf5d87308169f7",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of users successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Emanuel Molina"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "emanueljose@gmail.com"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "public/images/KaUrisZTeapBQQPGROj2gQdWAqga4rXPtWPY6YQq.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2024-05-14T19:38:33.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": "2024-05-14T19:38:33.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Save a user",
                "operationId": "e2308aae8643f8f4d79821a6399114f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email of the user",
                                        "type": "string",
                                        "example": "emanueljose@gmail.com"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "name": {
                                        "description": "Name of the user",
                                        "type": "string",
                                        "example": "Emanuel Molina"
                                    },
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "rol": {
                                        "description": "Role of the user",
                                        "type": "string",
                                        "example": "Admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": "1"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Emanuel Molina"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "emanueljosemolina@gmail.com"
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14 19:38:33"
                                                        },
                                                        "image": {
                                                            "type": "string",
                                                            "example": "public/images/LVOfSH7m3NHo3g3nZ6dK2HYrk1t59Vn8FxHDeJxM.jpg"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjo..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "User created error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password or email is invalid"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "properties": {
                                                        "email": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "The email has already been taken."
                                                            }
                                                        },
                                                        "password": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "password is required."
                                                            }
                                                        },
                                                        "name": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "name is required."
                                                            }
                                                        },
                                                        "image": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": [
                                                                    "The image field must be an image.",
                                                                    "The image field must be a file of type: jpg, jpeg, png, gif."
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user",
                "operationId": "dd08c53b3be10f887e141b15a012476e",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of users successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Emanuel Molina"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "emanueljose@gmail.com"
                                                        },
                                                        "image": {
                                                            "type": "string",
                                                            "example": "public/images/KaUrisZTeapBQQPGROj2gQdWAqga4rXPtWPY6YQq.jpg"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2024-05-14T19:38:33.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "passport": {
                "type": "http",
                "description": "Laravel passport token.",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "passport": [],
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    ]
}